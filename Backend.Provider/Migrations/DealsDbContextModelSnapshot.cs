// <auto-generated />
using System;
using DealStoreweb.Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DealStoreweb.Backend.Migrations
{
    [DbContext(typeof(dealstoreDBContext))]
    partial class DealsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DealStoreweb.Backend.Models.CategoryTbl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CategoryTbl");
                });

            modelBuilder.Entity("DealStoreweb.Backend.Models.CustomerProviderRequestTbl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDatetimeOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDenied")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHandled")
                        .HasColumnType("bit");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("RequestId");

                    b.ToTable("Customer_Provider_RequestTbl");
                });

            modelBuilder.Entity("DealStoreweb.Backend.Models.CustomerTbl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDatetimeOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDatetimeOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UserRef")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("CustomerTbl");
                });

            modelBuilder.Entity("DealStoreweb.Backend.Models.ProviderTbl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDatetimeOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Occupation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDatetimeOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserRef")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserRef");

                    b.ToTable("ProviderTbl");
                });

            modelBuilder.Entity("DealStoreweb.Backend.Models.RequestTbl", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDatetimeOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDatetimeOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("RequestTbl");
                });

            modelBuilder.Entity("DealStoreweb.Backend.Models.ServiceTbl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDatetimeOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionShort")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Description_Short");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDatetimeOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ServiceTbl");
                });

            modelBuilder.Entity("DealStoreweb.Backend.Models.UserTbl", b =>
                {
                    b.Property<Guid>("UserRef")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDatetimeOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsNotifyEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNotifySms")
                        .HasColumnType("bit");

                    b.Property<bool>("IsServiceProvider")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDatetimeOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("UserRef")
                        .HasName("PK_Table");

                    b.ToTable("UserTbl");
                });

            modelBuilder.Entity("DealStoreweb.Backend.Models.CustomerProviderRequestTbl", b =>
                {
                    b.HasOne("DealStoreweb.Backend.Models.CustomerTbl", "Customer")
                        .WithMany("CustomerProviderRequestTbls")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Customer_Provider_RequestTbl_CustomerTbl")
                        .IsRequired();

                    b.HasOne("DealStoreweb.Backend.Models.ProviderTbl", "Provider")
                        .WithMany("CustomerProviderRequestTbls")
                        .HasForeignKey("ProviderId")
                        .HasConstraintName("FK_Customer_Provider_RequestTbl_ProviderTbl")
                        .IsRequired();

                    b.HasOne("DealStoreweb.Backend.Models.RequestTbl", "Request")
                        .WithMany("CustomerProviderRequestTbls")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK_Customer_Provider_RequestTbl_RequestTbl")
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Provider");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("DealStoreweb.Backend.Models.ProviderTbl", b =>
                {
                    b.HasOne("DealStoreweb.Backend.Models.UserTbl", "UserRefNavigation")
                        .WithMany("ProviderTbls")
                        .HasForeignKey("UserRef")
                        .HasConstraintName("FK_ProviderTbl_UserTbl")
                        .IsRequired();

                    b.Navigation("UserRefNavigation");
                });

            modelBuilder.Entity("DealStoreweb.Backend.Models.ServiceTbl", b =>
                {
                    b.HasOne("DealStoreweb.Backend.Models.CategoryTbl", "Category")
                        .WithMany("ServiceTbls")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_ServiceTbl_CategoryTbl")
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DealStoreweb.Backend.Models.CategoryTbl", b =>
                {
                    b.Navigation("ServiceTbls");
                });

            modelBuilder.Entity("DealStoreweb.Backend.Models.CustomerTbl", b =>
                {
                    b.Navigation("CustomerProviderRequestTbls");
                });

            modelBuilder.Entity("DealStoreweb.Backend.Models.ProviderTbl", b =>
                {
                    b.Navigation("CustomerProviderRequestTbls");
                });

            modelBuilder.Entity("DealStoreweb.Backend.Models.RequestTbl", b =>
                {
                    b.Navigation("CustomerProviderRequestTbls");
                });

            modelBuilder.Entity("DealStoreweb.Backend.Models.UserTbl", b =>
                {
                    b.Navigation("ProviderTbls");
                });
#pragma warning restore 612, 618
        }
    }
}
